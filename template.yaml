Transform: AWS::Serverless-2016-10-31
Parameters:
  OpsCenterIntegration:
    Type: String
    Default: "False"
    AllowedValues:
      - "False"
      - "True"
    Description: Enable ("True") or disable ("False") integration with OpsCenter. Default is "False".
  JiraIntegration:
    Type: String
    Default: "True"
    AllowedValues:
      - "False"
      - "True"
    Description: Enable ("True") or disable ("False") integration with JIRA. Default is "True".
  WorkloadTagKey:
    Type: String
    Description: Enter the Tag Key associated with your workload resources.
  WorkloadTagValue:
    Type: String
    Description: Enter the Tag Value associated with your workload resources.
  JiraURL:
    Type: String
    Description: Enter the URL of your Jira workspace (e.g. "https://my-jira-workspace.atlassian.net")
  JiraUsername:
    Type: String
    Description: Enter your Jira username
  JiraSecretSSMParam:
    Type: String
    Description: Enter the name of the SSM encrypted parameter of your Jira API Access Topic (DO NOT ENTER THE API TOKEN ITSELF)
  JiraProjectKey:
    Type: String
    Description: Enter your Jira project key
Resources:
  LambdaWATracker:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: LambdaWATracker
      PackageType: Zip
      CodeUri: src/LambdaWATracker
      Handler: lambda-wa-tracker.lambda_handler
      Runtime: python3.9
      MemorySize: 3008
      Timeout: 300
      Tracing: PassThrough
      Environment:
        Variables:
          DDB_TABLE: !Ref TicketStateTable
          TABLE_ARN: !GetAtt TicketStateTable.Arn
          OPS_CENTER_INTEGRATION: !Ref OpsCenterIntegration
          JIRA_INTEGRATION: !Ref JiraIntegration
          TAG_KEY: !Ref WorkloadTagKey
          TAG_VALUE: !Ref WorkloadTagValue
          JIRA_URL: !Ref JiraURL
          JIRA_USERNAME: !Ref JiraUsername
          JIRA_SECRET_SSM_PARAM: !Ref JiraSecretSSMParam
          JIRA_PROJECT_KEY: !Ref JiraProjectKey
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TicketStateTable
        - SSMParameterReadPolicy:
            ParameterName: !Ref JiraSecretSSMParam
        - Statement:
          - Sid: WellArchitectedPolicy
            Effect: Allow
            Action:
            - wellarchitected:ListCheckDetails
            - wellarchitected:GetAnswer
            Resource: '*'
          - Sid: ResourceGroupPolicy
            Effect: Allow
            Action:
            - tag:GetResources
            Resource: '*'
          - Sid: TrustedAdvisorPolicy
            Effect: Allow
            Action:
            - support:DescribeTrustedAdvisorCheckResult
            - support:DescribeTrustedAdvisorChecks
            Resource: '*'
          - Sid: SSMOpsCenterPolicy
            Effect: Allow
            Action:
            - ssm:CreateOpsItem
            - ssm:UpdateOpsItem
            Resource: '*'
  LambdaWATrackerLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaWATracker}
  LambdaTicketListener:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: LambdaTicketListener
      PackageType: Zip
      CodeUri: src/LambdaTicketListener
      Handler: lambda-ticket-listener.lambda_handler
      Runtime: python3.9
      MemorySize: 3008
      Timeout: 300
      Tracing: PassThrough
      Environment:
        Variables:
          DDB_TABLE: !Ref TicketStateTable
          TABLE_ARN: !GetAtt TicketStateTable.Arn
          OPS_CENTER_INTEGRATION: !Ref OpsCenterIntegration
          JIRA_INTEGRATION: !Ref JiraIntegration
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TicketStateTable
        - Statement:
          - Sid: WellArchitectedPolicy
            Effect: Allow
            Action:
            - wellarchitected:GetAnswer
            - wellarchitected:UpdateAnswer
            - wellarchitected:CreateMilestone
            Resource: '*'
      Events:
        TopicJiraAutomations:
          Type: SNS
          Properties:
            Topic: !Ref TopicJiraAutomations
            Region: !Select
              - 3
              - !Split
                - ':'
                - !Ref TopicJiraAutomations
  LambdaTicketListenerLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaTicketListener}
  TicketStateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ticketHeaderKey
          AttributeType: S
        - AttributeName: creationDate
          AttributeType: S
        - AttributeName: ticketId
          AttributeType: S
        - AttributeName: bestPracticeId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: ticketHeaderKey
          KeyType: HASH
        - AttributeName: creationDate
          KeyType: RANGE
      GlobalSecondaryIndexes: 
        - IndexName: "ticketId-index"
          KeySchema: 
            - AttributeName: "ticketId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "bestPracticeId-index"
          KeySchema: 
            - AttributeName: "bestPracticeId"
              KeyType: "HASH"
          Projection: 
            NonKeyAttributes: 
              - "bestPracticeId"
            ProjectionType: "INCLUDE"
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  EventRuleWA:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.wellarchitected
        detail:
          eventName:
            - UpdateAnswer
      Targets:
        - Id: !Ref LambdaWATracker
          Arn: !GetAtt LambdaWATracker.Arn
  EventRuleWAToLambdaWATrackerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaWATracker.Arn
      Principal: !Sub events.${AWS::URLSuffix}
      SourceArn: !GetAtt EventRuleWA.Arn
  EventRuleOpsCenter:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.ssm
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - ssm.amazonaws.com
          eventName:
            - UpdateOpsItem
          requestParameters:
            Status:
              - Resolved
      Targets:
        - Id: !Ref LambdaTicketListener
          Arn: !GetAtt LambdaTicketListener.Arn
  EventRuleOpsCenterToLambdaTicketListenerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaTicketListener.Arn
      Principal: !Sub events.${AWS::URLSuffix}
      SourceArn: !GetAtt EventRuleOpsCenter.Arn
  TopicJiraAutomations:
    Type: AWS::SNS::Topic
  TopicJiraAccessPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: TopicJiraPolicy
        Version: "2012-10-17"
        Statement:
        - Sid: grant-atlassian-automation-publish
          Effect: Allow
          Principal:
            AWS: "arn:aws:iam::815843069303:root"
          Action: sns:Publish
          Resource: !Ref TopicJiraAutomations
      Topics:
      - !Ref TopicJiraAutomations
